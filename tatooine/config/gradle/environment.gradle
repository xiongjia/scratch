idea.module {
  excludeDirs += file("gradle")
  excludeDirs += file(".settings")
  excludeDirs += file("bin")
}

idea.project {
  jdkName = "1.8"
  languageLevel = 'JDK_1_8'
  vcs = "Git"
}

idea.project.ipr {
  withXml { xmlProvider ->
    def iprNode = xmlProvider.asNode()
    ideaActivateGit(iprNode)
    ideaActivateCheckstyle(iprNode)
  }
}

ext {
  ideaActivateGit = { Node iprNode ->
    // Activate 'git' as VCS
    def vcsMappings = iprNode.component.find { it.'@name' == 'VcsDirectoryMappings' }
    vcsMappings.mapping.@vcs = 'Git'
  }

  ideaActivateCheckstyle = { Node iprNode ->
    // Activate and config 'Checkstyle' plugin
    def checkstyle = iprNode.component.find { it.'@name' == 'CheckStyle-IDEA' }
    if (checkstyle == null) {
      def localRule = 'PROJECT_RELATIVE:$PROJECT_DIR$' + '/config/checkstyle/google_checks.xml' +
        ':tatooine'
      def defaultRule = 'CLASSPATH:/sun_checks.xml:The default CheckStyle rules'
      checkstyle = iprNode.appendNode('component', [name: 'CheckStyle-IDEA'])
      def builder = new NodeBuilder()
      def option = builder.option(name: 'configuration') {
        map {
          entry(key: 'checkstyle-version', value: '8.21')
          entry(key: 'active-configuration', value: localRule)
          entry(key: 'check-nonjava-files', value: false)
          entry(key: 'check-test-classes', value: true)
          entry(key: 'suppress-errors', value: false)
          entry(key: 'thirdparty-classpath', value: '')
          entry(key: 'property-1.samedir', value: 'config/checkstyle')
          entry(key: 'location-0', value: localRule)
          entry(key: 'location-1', value: defaultRule)
        }
      }
      checkstyle.append option
    }
  }
}

