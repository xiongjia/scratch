plugins {
    id 'java'
    id 'groovy'
    id 'scala'
    id 'eclipse'
    id 'idea'
    id 'maven'
    id 'application'
    id 'checkstyle'
    id 'war'
    id 'net.ltgt.apt'             version '0.8'
    id 'org.akhikhl.gretty'       version '1.4.0'
    id 'org.flywaydb.flyway'      version '4.1.2'
    id 'org.springframework.boot' version '1.5.2.RELEASE'
    id 'com.cursive-ide.clojure'  version '1.1.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8

sourceSets.main.java.srcDirs   = []
sourceSets.main.groovy.srcDirs = ["src/main/java", "src/main/groovy"]
sourceSets.main.clojure.srcDirs = ["src/main/clojure"]

final appMainClassName     = 'scratch.Scratch'
final bootRunMainClassName = 'scratch.server.SpringBootApp'
final appBaseName          = 'scratch'
final appVersion           = '1.0'

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
}

compileGroovy {
    options.compilerArgs << '-implicit:none'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'org.projectlombok:lombok:1.16.10'
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'commons-codec:commons-codec:1.10'
    compile 'com.google.guava:guava:23.0'
    compile 'com.google.jimfs:jimfs:1.1'
    compile 'org.quartz-scheduler:quartz:2.2.3'
    compile 'org.jooq:joor:0.9.6'

    /* logging */
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.apache.logging.log4j:log4j-core:2.8.1'
    compile 'ch.qos.logback:logback-core:1.1.7'
    compile 'ch.qos.logback:logback-classic:1.1.7'

    /* RPC */
    compile 'com.typesafe.akka:akka-actor_2.11:2.4.17'
    compile 'com.beust:jcommander:1.58'
    compile 'org.modelmapper:modelmapper:0.7.7'
    compile 'com.owlike:genson:1.4'
    compile 'com.typesafe:config:1.3.1'
    compile 'com.squareup.okhttp3:okhttp:3.5.0'
    compile 'org.zeromq:jeromq:0.3.6'

    /* testing */
    compile 'junit:junit:4.12'
    compile 'org.testng:testng:6.11'
    compile 'org.seleniumhq.selenium:selenium-java:3.0.1'
    compile 'com.googlecode.junit-toolbox:junit-toolbox:2.3'
    compile 'org.openjdk.jmh:jmh-core:1.19'
    compile 'org.openjdk.jmh:jmh-generator-annprocess:1.19'

    /* server */
    compile 'org.glassfish.jersey.core:jersey-server:2.25.1'
    compile 'org.glassfish.jersey.containers:jersey-container-netty-http:2.25'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'javax.servlet:jstl:1.2'
    compile 'org.apache.struts:struts2-core:2.5.10.1'
    compile 'org.springframework.boot:spring-boot-starter-web:1.5.2.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-undertow:1.5.2.RELEASE'

    /* client */
    compile 'io.github.openfeign:feign-core:9.0.0'
    compile 'io.github.openfeign:feign-gson:9.0.0'
    compile 'com.sun.mail:javax.mail:1.5.6'
    compile 'org.im4java:im4java:1.4.0'

    compile 'com.google.inject:guice:4.1.0'
    compile 'org.springframework:spring-core:4.3.6.RELEASE'
    compile 'org.springframework:spring-context:4.3.6.RELEASE'
    compile 'org.springframework:spring-beans:4.3.6.RELEASE'

    /* database */
    compile 'org.hibernate:hibernate-core:5.2.8.Final'
    compile 'org.mybatis:mybatis:3.4.2'
    compile 'org.xerial:sqlite-jdbc:3.16.1'
    compile 'com.h2database:h2:1.4.194'

    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    compile 'org.clojure:clojure:1.8.0'

    testCompile 'com.squareup.okhttp3:mockwebserver:3.5.0'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.7'
    testCompile 'junit:junit:4.12'

    apt 'org.projectlombok:lombok:1.16.10'
}

task fatJar(type: Jar) {
    baseName = appBaseName + '-' + appVersion + '-all'
    manifest.mainAttributes('Main-Class' : appMainClassName)
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}

jar {
    baseName = appBaseName
    version =  appVersion
    manifest.mainAttributes('Main-Class' : appMainClassName)
    exclude('**/*.db')
}

war {
    rootSpec.exclude('*.db')
}

springBoot {
    mainClass = bootRunMainClassName
}

bootRepackage {
    mainClass = bootRunMainClassName
}

run {
    main = appMainClassName
}

task runApp(type:JavaExec) {
    main = appMainClassName
    classpath = sourceSets.main.runtimeClasspath
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}

checkstyle {
    toolVersion = "7.3"
    configFile = file('config/checkstyle/google_checks.xml')
}

gretty {
    port = 9000
}

flyway {
    driver = 'org.sqlite.JDBC'
    /* the default sqlite db file folder is $env[db_store_sqlite] */
    url = 'jdbc:sqlite:' + System.getenv('db_store_sqlite') + '/scratch.db'
}
