final projectVersion = '1.0'
final checkstyleRule = '/config/checkstyle/google_checks.xml'
final checkstyleVersion = '8.12'

subprojects {
  apply plugin: 'base'
  apply plugin: 'java'
  apply plugin: 'checkstyle'

  buildDir = new File(rootProject.projectDir, "build/" + project.name)

  ext {
    zoo = ['version': projectVersion]
  }

  checkstyle {
    toolVersion = checkstyleVersion
    configFile = new File(rootProject.projectDir, checkstyleRule)
  }

  dependencies {
    /* logging */
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.apache.logging.log4j:log4j-core:2.11.1'
    compile 'ch.qos.logback:logback-core:1.2.3'
    compile 'ch.qos.logback:logback-classic:1.2.3'
  }
}

allprojects {
  apply plugin: 'idea'

  repositories {
    mavenLocal()
    mavenCentral()
  }
}

idea {
  project {
    jdkName = '1.8'
    languageLevel = 'JDK_1_8'

    ipr {
      withXml { xmlProvider ->
        def iprNode = xmlProvider.asNode()
        ideaActivateCheckstyle(iprNode)
      }
    }
  }
  module {
    excludeDirs += file('gradle')
    excludeDirs += file('bin')
    excludeDirs += file('.settings')
  }
}

ext {
  ideaActivateCheckstyle = { Node iprNode ->
    def checkstyle = iprNode.component.find { it.'@name' == 'CheckStyle-IDEA' }
    if (checkstyle == null) {
      def localRule = 'PROJECT_RELATIVE:$PROJECT_DIR$' + checkstyleRule +
        ':local checkstyle'
      def defaultRule = 'CLASSPATH:/sun_checks.xml:The default CheckStyle rules'
      checkstyle = iprNode.appendNode('component', [name: 'CheckStyle-IDEA'])
      def builder = new NodeBuilder()
      def option = builder.option(name: 'configuration') {
          map {
            entry(key: 'checkstyle-version', value: checkstyleVersion)
            entry(key: 'active-configuration', value: localRule)
            entry(key: 'check-nonjava-files', value: false)
            entry(key: 'check-test-classes', value: true)
            entry(key: 'suppress-errors', value: false)
            entry(key: 'thirdparty-classpath', value: '')
            entry(key: 'property-1.samedir', value: 'config/checkstyle')
            entry(key: 'location-0', value: defaultRule)
            entry(key: 'location-1', value: localRule)
         }
       }
       checkstyle.append option
     }
   }
}

